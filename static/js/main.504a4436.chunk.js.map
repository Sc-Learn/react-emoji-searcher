{"version":3,"sources":["components/Container/Container.module.css","components/Empty/Empty.module.css","components/Emojis/Emojis.module.css","components/Input/Input.module.css","components/Navbar/Navbar.module.css","components/EmojiBox/EmojiBox.module.css","assets/search-icon.svg","assets/emoji-icon.svg","components/Navbar/index.jsx","components/Container/index.jsx","components/Empty/index.jsx","components/EmojiBox/index.jsx","components/Emojis/index.jsx","utils/filterEmojis.js","components/Input/index.jsx","App.js","index.js"],"names":["module","exports","Navbar","className","styles","nav","style","marginRight","navIcon","src","emojiIcon","alt","marginTop","searchIcon","navTitle","Container","children","container","Empty","text","empty","EmojiBox","title","symbol","useState","selected","setSelected","useEffect","timer","setTimeout","clearTimeout","onClick","navigator","clipboard","writeText","classnames","emojiBox","emoji","dangerouslySetInnerHTML","__html","codePointAt","emojiText","Emojis","emojisData","searchText","filteredEmojis","setFilteredEmojis","maxResults","filter","toLowerCase","includes","keywords","splice","filterEmojis","length","emojisGrid","map","index","Input","onChange","value","input","placeholder","App","setEmojisData","setSearchText","loading","setLoading","error","setError","a","axios","get","res","data","console","fetchEmojis","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.504a4436.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"empty\":\"Empty_empty__3-Yhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emojisGrid\":\"Emojis_emojisGrid__2HyGw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__3PNbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"navTitle\":\"Navbar_navTitle__3a_w2\",\"navIcon\":\"Navbar_navIcon__XDck0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"emojiBox\":\"EmojiBox_emojiBox__183sW\",\"selected\":\"EmojiBox_selected__1MSlP\",\"emoji\":\"EmojiBox_emoji__R8Hwv\",\"emojiText\":\"EmojiBox_emojiText__3nHmG\"};","export default __webpack_public_path__ + \"static/media/search-icon.f071e5c8.svg\";","export default __webpack_public_path__ + \"static/media/emoji-icon.d338b090.svg\";","import styles from './Navbar.module.css'\n\nimport searchIcon from '../../assets/search-icon.svg'\nimport emojiIcon from '../../assets/emoji-icon.svg'\n\nconst Navbar = () => {\n  return (\n    <nav className={styles.nav}>\n      <img style={{ marginRight: 8 }} className={styles.navIcon} src={emojiIcon} alt=\"emoji icon\" />\n      <img style={{ marginTop: 3 }} className={styles.navIcon} src={searchIcon} alt=\"search icon\" />\n      <span className={styles.navTitle}> er </span>\n    </nav>\n  )\n}\n\nexport default Navbar;","import propTypes from 'prop-types'\n\nimport styles from './Container.module.css'\n\nconst Container = ({ children }) => {\n  return (\n    <section className={styles.container}>\n      {children}\n    </section>\n  )\n}\n\nContainer.propTypes = {\n  children: propTypes.node\n}\n\nexport default Container;","import propTypes from 'prop-types'\n\nimport styles from './Empty.module.css'\n\nconst Empty = ({ text }) => {\n  return (\n    <div className={styles.empty}>\n      {text}\n    </div>\n  )\n}\n\nEmpty.propTypes = {\n  text: propTypes.string.isRequired\n}\n\nexport default Empty;","import { useState, useEffect } from 'react'\n\nimport propTypes from 'prop-types'\nimport classnames from 'classnames'\n\nimport styles from './EmojiBox.module.css'\n\nconst EmojiBox = ({ title, symbol }) => {\n  const [selected, setSelected] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setSelected(false), 600)\n\n    return () => clearTimeout(timer)\n  }, [selected])\n\n  return (\n    <div \n      onClick={() => {\n        navigator.clipboard.writeText(symbol)\n        setSelected(true)\n      }}\n\n      className={classnames(styles.emojiBox, {\n        [styles.selected]: selected\n      })}\n    >\n      <p\n        className={styles.emoji}\n        dangerouslySetInnerHTML={{\n          __html: `&#${symbol.codePointAt(0)}`\n        }} \n      />\n\n      <p className={styles.emojiText}>\n        {selected ? 'Copied!' : title}\n      </p>\n    </div>\n  )\n}\n\nEmojiBox.propTypes = {\n  title: propTypes.string,\n  symbol: propTypes.string,\n}\n\nexport default EmojiBox;","import { useState, useEffect } from 'react'\nimport propTypes from 'prop-types'\n\nimport EmojiBox from '../EmojiBox'\nimport Empty from '../Empty'\nimport styles from './Emojis.module.css'\n\nimport { filterEmojis } from '../../utils/filterEmojis'\n\nconst Emojis = ({ emojisData, searchText }) => {\n  const [filteredEmojis, setFilteredEmojis] = useState([])\n\n  useEffect(() => {\n\n    setFilteredEmojis(filterEmojis({\n      emojisData,\n      searchText,\n    }))\n\n  }, [emojisData, searchText])\n\n  if (filteredEmojis.length > 0) {\n    return (\n      <div className={styles.emojisGrid}>\n        {filteredEmojis.map((emoji, index) => (\n          <EmojiBox\n          key={index}\n          title={emoji.title}\n          symbol={emoji.symbol}\n          />\n        ))}\n      </div>\n    )\n  } else {\n    return (\n      <Empty \n        text=\"Oops, zero finding. Let's try another keyword!\"\n      />\n    )\n  }\n}\n\nEmojis.propTypes = {\n  emojisData: propTypes.array,\n  searchText: propTypes.string\n}\n\nexport default Emojis;","export const filterEmojis = ({ emojisData, searchText = \"\", maxResults = 20 }) => {\n\n  const filteredEmojis = emojisData.filter(emoji => {\n    \n    if (emoji.title.toLowerCase().includes(searchText.toLowerCase())) {\n      return true;\n    }\n\n    if (emoji.keywords.includes(searchText.toLowerCase())) {\n      return true;\n    }\n\n    return false;\n\n  });\n\n  return filteredEmojis.splice(0, maxResults);\n\n}","import propTypes from 'prop-types'\n\nimport styles from './Input.module.css'\n\nconst Input = ({ onChange, value }) => {\n  return (\n    <input\n      className={styles.input}\n      onChange={onChange}\n      value={value}\n      placeholder=\"Search\"\n    /> \n  )\n}\n\nInput.propTypes = {\n  onChange: propTypes.func,\n  value: propTypes.string\n}\n\nexport default Input;","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Navbar from './components/Navbar';\nimport Container from './components/Container';\nimport Empty from './components/Empty';\nimport Emojis from './components/Emojis';\nimport Input from './components/Input';\n\nfunction App() {\n  const [emojisData, setEmojisData] = useState([]);\n  const [searchText, setSearchText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    async function fetchEmojis() {\n      setLoading(true);\n\n      try {\n        const res = await axios.get('https://run.mocky.io/v3/fe964130-70d0-430f-b839-e55081423c28');\n\n        setEmojisData(res.data);\n      } catch (err) {\n        console.error(err);\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchEmojis()\n  }, [])\n\n  const handleSearchEmojis = (e) => {\n    setSearchText(e.target.value);\n  }\n\n  return (\n    <>\n      <Navbar />\n\n      <Container>\n        <Input \n          onChange={handleSearchEmojis}\n          value={searchText}\n        />\n \n        {loading && <Empty text=\"Loading...\" />}\n        {error && <Empty text=\"Error!\" />}\n\n        {emojisData.length > 0 && <Emojis emojisData={emojisData} searchText={searchText} />}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}